---
- name: Install Java and Net-Tools
  hosts: nexus
  tasks:
  - name: Update apt repo and update_cache
    apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  - name: Install Java 8
    apt: name=openjdk-8-jre-headless
  - name: Install Net-Tools
    apt: name=net-tools

- name: Download and unpack Nexus installer
  hosts: nexus
  tasks:
  - name: Check Nexus folder stats
    stat:
      path: /opt/nexus
    register: stat_result
  #- debug: msg={{stat_result}}
  - name: Download Nexus
    get_url:
      url: https://download.sonatype.com/nexus/3/latest-unix.tar.gz
      dest: /opt/
    register: download_result
  #- debug: msg={{download_result}}
  - name: Untar nexus installer
    unarchive:
      src: "{{download_result.dest}}"
      dest: /opt/
      remote_src: yes
    when: not stat_result.stat.exists
  - name: Find nexus folder
    find: 
      paths: /opt
      pattern: "nexus-*"
      file_type: directory
    register: find_result
  #- debug: msg={{find_result}}
  - name: Rename Nexus folder
    shell: mv {{find_result.files[0].path}} /opt/nexus
    when: not stat_result.stat.exists

- name: Create nexus user to own nexus folders
  hosts: nexus
  tasks:
  - name: Ensure group nexus exists
    group:
      name: nexus
      state: present
  - name: Create nexus user
    user:
      name: nexus
      group: nexus
  - name: Make nexus user owner of nexus folder
    file:
      path: /opt/nexus
      state: directory
      owner: nexus
      group: nexus
      recurse: yes
  - name: Make nexus user owner of sonatype folder
    file:
      path: /opt/sonatype-work
      state: directory
      owner: nexus
      group: nexus
      recurse: yes

- name: Start nexus with nexus user
  hosts: nexus
  tasks:
  - name: Set run_as_user nexus
    lineinfile:
      path: /opt/nexus/bin/nexus.rc
      regexp: '^#run_as_user=""'
      line: run_as_user="nexus"
  - name: Start nexus app
    command: /opt/nexus/bin/nexus start
    become: true
    become_user: nexus

- name: Verify if nexus is running
  hosts: nexus
  tasks:
  - name: Check with ps aux
    shell: ps aux | grep nexus
    register: app_status
  - debug: msg={{app_status.stdout_lines}}
  - name: Wait 1 minute
    pause:
      minutes: 1
  - name: Check with netstat
    shell: netstat -plnt
    register: app_status
  - debug: msg={{app_status.stdout_lines}}